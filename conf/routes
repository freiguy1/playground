# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)




#####################################
#             CLONE                 #
#####################################

GET	/clone				controllers.clone.Application.index
GET	/clone/itsMe				controllers.clone.Application.itsMe

#    ########################
#    #         API          #
#    ########################

GET	/clone/api/systems		controllers.clone.api.SystemApi.get
GET	/clone/api/belts		controllers.clone.api.BeltApi.get
POST	/clone/api/belts/:id/hasRats	controllers.clone.api.BeltApi.hasRats(id: Long)
POST	/clone/api/belts/:id/isEmpty	controllers.clone.api.BeltApi.isEmpty(id: Long)
PUT	/clone/api/belts/:id/clear	controllers.clone.api.BeltApi.clear(id: Long)
GET	/clone/api/time			controllers.clone.api.BaseApi.time




#################################
###        SECURE SOCIAL      ###
#################################
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized
